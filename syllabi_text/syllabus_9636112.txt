       Syllabus - Computer Sciences 312 -Introduction to Programming
                    The University of Texas at Austin · Summer 2019
Description: Computer science encompasses a wide range of topics and skills designing and building
computer devices (e.g., your cell phone, laptop, cleaning robots), designing and building programming
languages (e.g., Java, Python, C) and the supporting software that control these devices (e.g., operating
systems, compilers), and the actual applications themselves (e.g., reading an x-ray, video animation, voice
mail). This course focuses on how to write computer programs that solve problems on a general purpose
computer.
Programming is one of the key tools that computer scientists use to help themselves and others use to solve
problems. This course uses a particular programming language, Java, to introduce you to how to use a
computer to solve your problems. In this course, most of your learning will take place when you are putting
in to practice the concepts from the book and lectures to solve more and more complex problems using more
and more sophisticated programming practices. You will learn by doing. Performance on the programming
assignments and performance on exams correlate closely.
Programming is a skill learned by experience, not just listening to lecture. To gain that experience I strongly
encourage you to do as many extra problems as time allows. See the schedule for extra problems from the
textbook and websites with practice problems.
Objectives: This is a first course in computer programming. The purposes of the course are to learn
fundamental computer science concepts including algorithm development, problem decomposition, data
types, variables, parameters, decision making, iteration, arrays, and 2D arrays. By the end of the course
students are expected to be able to implement programs consisting of several programmer defined data types
and several hundred lines of code employing non trivial algorithms.
Estimates of the required effort to pass the class are:
       3-5 hours per week of studying
       2-10 hours per week of programming (less early in the course, more later)
Prerequisites: Credit with a grade of at least C- or registration for Mathematics 408C, 408K, or 408N..
Lecture Schedule:
       MWTh 10 am - 12 noon, GDC 1.304
       Conduct in Lecture: Please sit in the first 5 rows of the room.
       I do not allow the use of laptops or any device with a raised screen in class. If you have a device
       that can lay flat on the desk such as a tablet or 2-1 computer you may use it. I implore you to not
       use class time to e-mail, update your Facebook page, post to Instagram, etc. If you are addicted to the
       your smartphone, laptop, or tablet, consider this class your social media free zone. Further, I guarantee
       you that you will not do well in the course if you are simply looking up long enough to type out what’s
       on the projector screen before you return to see whether somebody ‘liked’ your comment about the
       Cheerios you had for breakfast. In fact, the empirical research on this topic is clear: people are
       incapable of learning and retaining information when they are multi-tasking on their computers (and
       it’s a distraction to the people sitting around you that are trying to learn something).


Teaching Staff:
     Instructor, Mike Scott, email: scottm@cs.utexas.edu office: GDC 6.304.
     Lab Hours: Monday 1 - 3 pm, Wednesday, 12 noon - 1 pm, Thursday, 12 noon - 1 pm. If you cannot
     make these hours email me to request an appointment.
     Office hours are held in the 3rd floor public computer lab in the Gates CS complex,
     GDC 3.302
           Undergraduate Teaching Assistants:
                                                                                             Lab
            Name        Email
                                                                                             Hours
                                                                                             T 12
                                                                                             noon
                                                                                             -1
            Tony                                                                             pm,
            Chang                                                                            W1-
                                                                                             2 pm,
                                                                                             Th 1 -
                                                                                             2pm
                                                                                             T 11
                                                                                             am -
                                                                                             12:30
            Elad
                                                                                             pm, F
            Hershkovitz
                                                                                             1-
                                                                                             2:30
                                                                                             pm
Discussion Section Schedule.
     Students must attend the discussion section for which they are officially registered.
     Look at your class schedule on UT Direct (NOT Canvas) to verify your unique course number.
          Unique ID          Discussion Section Time                Section Location
            85565           Monday, 12 noon - 1:30 pm                  GDC 4.302
            85570              Monday, 1:30 - 3 pm                     GDC 4.302
Required Materials:
  1. Building Java Programs: A Back to Basics Approach (4th Edition), Publication Date: February 15,
     2016 | ISBN-10: 0134322762| ISBN-13: 978-0134322766 | Pearson Education / Addison Wesley.
     (Previous versions of the book are acceptable, but there may be differences in section numbers for
     assigned reading and problem numbers for suggested exercises.)


       Textbook homepage is http://www.buildingjavaprograms.com/.
   2. Purchase an iClicker (a remote control device) from the Co-op
       bookstore or the iClicker website.
       Be sure you get the "iClicker'' brand. We are using iClicker+
       but the iClicker2 or original iClicker will work as well. We are
       using physical clickers, not REEF polling, web, or app version
       of iClicker.
Class web site: http://www.cs.utexas.edu/~scottm/cs312. Course materials and announcements are available
there.
Startup: Most of the things you need to do to set up your infrastructure for the class are on the startup page.
Class Participation, iClicker
       Register your iClicker at https://www1.iclicker.com/register-a-remote. You must register at the
       iClicker website for this course, not on Canvas.
       Our software is iClicker classic:
       Select My institution does not use an LMS. (We don't use the Canvas iClicker feature in CS312, but
       your other courses may.)


       Register by providing:
              your first name
              your last name
              your UT EID (which they call your "student ID'")
              your clicker's ID (the serial number under the bar code on the back of the device)
       After registering you DO NOT have to sign up for a particular class on the iClicker website.
       Bring your clicker to every lecture. Participation on clicker questions is graded.
       In order to get credit for a given day you MUST:
              have your functioning clicker with you and
              answer one or more of the clicker questions during class and
              register your iClicker at the iClicker website as described above by the times monthly
              clicker grades are processed.
       If you do not meet these requirements you will not receive clicker credit for that day.
Class Discussion Tool: I have set up a discussion group for the class on Piazza.
       Go to the Piazza web site and join the CS312 - Scott group for The University of Texas at Austin.
       I will post class announcements and information to the discussion group.
       Post your questions about the class to the discussion group.
       Piazza is an official communication channel for this course.
Canvas: We will use Canvas to turn in programming assignments. See the assignments page for more details.
Email: All students must become familiar with the University's official e-mail student notification policy. It is
your responsibility to keep the University informed as to changes in your e-mail address. You are expected to
check e-mail on a frequent and regular basis in order to stay current with University-related communications,
recognizing that certain communications may be time-critical. It is recommended that e-mail be checked
daily. The complete text of this policy and instructions for updating your e-mail address are available at
http://tinyurl.com/pm6ej6e which includes instructions on how to update the email address you have on
record with UT.
You are responsible for checking your e-mail and the class discussion group on Piazza regularly for
class work and announcements.
Software: Required software for programming assignments is described on this web page. If you want to
work on your own system, download and install Java and an IDE. Recommended IDEs are Eclipse or BlueJ,
but you are free to use whatever IDE you want. See the linked page for more details.
Computing Facilities:
       UTCS Microlabs. Linux and PCs machines are available for assignments in the CS Department
       microcomputer lab located on the 1st and 3rd floors of GDC, Dell Hall (north wing). You are free to


      work on your own computer if you wish.
CS Lab Account:
      Students should obtain an account for the CS department public labs and machines. Visit this website
      to request account: https://apps.cs.utexas.edu/udb/newaccount/ (If you had an account the previous
      semester it should renew automatically.)
      Accounts take at least a day for account to become active. Please request your account as soon as
      possible. Even if you do not work in the lab, you will use this account to turn in your homework.
      These accounts are only for the CS public labs and machines, and not any other labs or networks at UT.
Schedule: A schedule of lecture topics, reading assignments, and assignment distribution and due dates is
available online, via the class web page, www.cs.utexas.edu/~scottm/cs312/schedule.htm. The schedule page
contains links to slides for the lectures, assignments, and online readings. Readings are to be completed
before class. The schedule is subject to change.
Grading: The class components used to determine your final average are:
       Component Type                Number              Points            Total Points
                                                     1st, 10 points
 Programming Assignments                12                                     230
                                                 all others: 20 points
 Section Problems                        8              5 points                40
 iClicker Participation                 21             1 per day                21
 Midterm Exam, in class
                                         1                 240                 240
 Wednesday, 7/3
 Final Exam, Wednesday,
                                         1                 480                 480
 7/31, 9 am - 12 noon
      Grades will be maintained on the University Canvas site.
      Programming assignments, iClicker participation, and quizzes can count no more than 280 points
      towards your final average. Note, points for the programming assignments, iClicker participation, and
      quizzes add up to 291 points. There are 11 points of "slack" in these non-exam components. This slack
      is to account for any non academic issues that may occur during the semester that cause you to miss
      one of these non-exam components. (Such as illness, family emergencies, hardware problems, etc.)
      Section Problems and iClicker participation cannot be made up for any reason. For programming
      assignments there is some leeway. See the explanation of slip days below. A student who is not present
      when the initial section problem is handed out receives a grade of 3/5 on the problem. A student who is
      not present until the discussion of the solution to the section problem with the TA begins receives a
      score of 0/5 or 1/5 as the TA deems fit.
      The final letter grades will be assigned based on your total points out of 1000 points. The grade cutoffs
      are: <600 = F, 600 - 699 = D, 700 - 799 = C, 800 - 899 = B, >= 900 = A. Plusses and minuses (+ and -)
      will be assigned to scores within 25 points of the cut offs. So for example total points 875 to 899 earn a


      B+ and total points 900 to 924 earn an A-.
      Note, points are NOT added to your final total. The "slack points" are handled by basing your final
      average on 1000 points instead of 1011points. There are 1011 points available in the course. Non-exam
      component points are capped at a maximum of 280. In other words, earning more than 280 points on
      the non-exam components will NOT result in points being added to your exam point total. This means
      Canvas underestimates your grade in many cases, but possibly overestimate it towards the end of the
      semester..
      Depending on the results of an exam, exam scores may be adjusted. No other class components
      (programming assignments, clicker participation, or section problems) are curved.
      You have 6 slip days (max of 2 per assignment) to use through out the term on your assignments if you
      are not able to turn an assignment in on time. See the assignments page for details of the requirements
      for turning in assignments and how slip days work.
      www.cs.utexas.edu/~scottm/cs312/Assignments/index.htm. Slip days are to account for life
      circumstances (My hard drive crashed! I got a virus downloading a BitTorrent file! My CPU caught fire
      while I was mining crypto currencies!) and emergencies. Do not use your slip days frivolously. If you
      use up your slip days and late assignments will not be graded and be assigned a grade of 0.
      The required format and procedures for turning in assignments are available at
      www.cs.utexas.edu/~scottm/cs312/Assignments/index.htm.Assignments that are not turned in to the
      correct directory in the correct format will cause you to, lose points, and/or receive a 0 on the
      assignment.
      If a student misses the midterm with a verifiable excuse, then the final exam will count for the missed
      exam. Contact the Mike if you miss an exam.
      If you believe we have made an error in grading an assignment, you must submit your complaint via
      email, along with supporting evidence, to your grader within 5 days of the date the teaching staff
      graded the assignment. TAs will post to Piazza when assignment grading is complete for their section.
      Note, do not bicker or quibble with the TAs on assignment grading.
      Questions about your grade are to be sent to the TA that graded the assignment.
      You may request a regrade of an exam if you feel the grading criteria was not applied correctly. To
      ensure accuracy the entire exam will be regraded and your score may go down. You must request the
      regrade during the section or class you exam is returned to you. If you leave the class or discussion
      section you cannot request a regrade. I will not regrade exams that have been in your unsupervised
      possession.
      The only opportunity for extra credit in this course is 5 points for completing the end of term, Course
      Instructor Survey (CIS). These 5 points are added to your non exam point total.
Of the roughly 1500 students who have taken CS312 with me:
      78% of the students earned a C- or higher: 36% A's, 28% B's, 14% C's
      11% earned a D or F.
      11% dropped or withdrew from the class, grade symbols Q or W.
Guiding Principle - No whining: Feedback and concerns about the course are always welcome; legitimate


grading errors that are identified in a timely fashion will certainly be corrected, but whining is counter-
productive and will only irritate those who evaluate your work to determine grades. Realize if you ask for a
regrade "because it can't hurt to ask" your score may actually go down if we find more errors and
problems.
Important Dates for Changing Academic Status and Dropping the Course: Refer to the Registrar's
academic calendar for the deadlines for changes in academic status. Highlights are:
       June 11: (4th class day) Last day of the official add/drop period; after this date, changes in registration
       require the approval of the department chair and usually the student’s dean. Last day to drop for a
       possible refund. Last day to add a course.
       July 30: Last day an undergraduate student may, with the dean’s approval, withdraw from the
       University or drop a class (Q drop) except for urgent and substantiated, nonacademic reasons. Last day
       a student may change registration in a class to or from the pass/fail or credit/no credit basis. UT no
       longer requires instructor permission to drop a class. However, I am notified of the request to
       drop and if you are involved in an ongoing academic dishonesty case the drop will not be
       approved.
       To be eligible for an incomplete (UT uses the symbol X to indicate incompletes) you must have a
       letter grade of C- or better and a written, verifiable excuse for missing the last test. This is a necessary
       but insufficient condition for receiving an incomplete. In general, I do not give incompletes (X's) so
       that you may make up large portions of course work.
See the College of Natural Science Guidelines and Procedures page for more information.
(http://cns.utexas.edu/advising/guidelines-procedures)
Help when You’re Struggling, Have a Crisis, or an Emergency
Please, when something bad happens, or when you’re feeling overwhelmed, get help. Don’t endure
it on your own. Even talking through the situation often helps. Here are some options:
       See me. Come by office hours, or book an appointment (just email me).
       Visit the computer science advisors. They’re not just there to help you register; they can really
       help in many situations.
       Tel: (512) 471-9509 E-mail: under-info@cs.utexas.edu (Tell them your UT EID.)
       Office: GDC 2.720 Hours: Monday–Friday 8:30 am – 4:30 p.m.
       Talk to Student Emergency Services. They are here to help you with all kinds of life’s troubles
       (family, housing, health, money, stress, etc.) whether it’s a crisis or not.
       Tel: (512) 471-5017 E-mail: studentemergency@austin.utexas.edu
       Office: SSB 4.104 Hours: Monday–Friday 8 am – 5 p.m.
University Code of Conduct
The core values of the University of Texas at Austin are learning, discovery, freedom, leadership,
individual opportunity, and responsibility. Each member of the University is expected to uphold these
values through integrity, honesty, trust, fairness, and respect toward peers and community.


Academic Honesty: Taken from the CS department Code of Conduct.
"The University and the Department are committed to preserving the reputation of your degree. It means a lot
to you. In order to guarantee that every degree means what it says it means, we must enforce a strict policy
that guarantees that the work that you turn in is your own and that the grades you receive measure your
personal achievements in your classes:
Every piece of work that you turn in with your name on it must be yours and yours alone unless
explicitly allowed by an instructor in a particular class. Specifically, unless otherwise authorized by an
instructor:
       Students may not discuss their work with anyone except the instructor and other members of the
       instructional staff (instructor, TA, lab proctor or partner on a pair assignment).
       Students may not acquire from any source (e.g., another student or an internet site) a partial or
       complete solution to a problem or project that has been assigned.
You are responsible for complying with this policy in two ways:
    1. You must not turn in work that is not yours, except as expressly permitted by the instructor of each
       course.
    2. You must not enable someone else to turn in work that is not theirs. Do not share your work with
       anyone else. Make sure that you adequately protect all your files. Even after you have finished a class,
       do not share your work or published answers with the students who come after you. They need to do
       their work on their own. This means do not post your solution code to any public web site such as
       public repositories on GitHub. Do not post your work to the web even after you have completed
       CS312.
The penalty for academic dishonesty will be a course grade of F and a referral of the case to the Dean
of Students. Further penalties, including suspension or expulsion from the university may be imposed
by that office.
One final word: This policy is not intended to discourage students from learning from each other, nor is it
unmindful of the fact that most significant work in computer science and in the computing industry is done by
teams of people working together. But, because of our need to assign individual grades, we are forced to
impose an otherwise artificial requirement for individual work. In some classes, it is possible to allow and
even encourage collaboration in ways that do not interfere with the instructor's ability to assign grades. In
these cases, your instructor will make clear to you exactly what kinds of collaboration are allowed for that
class."
For CS312 the policy on collaboration is modified as follows:
If you are repeating the course you may reuse code you completed on your own. You may NOT use
code from a program you worked on as part of pair or code that was from a program involved in an
academic dishonesty case. You must start from scratch on any and all programs that:
       were part of an academic dishonesty case
       you worked with a partner during a pervious semester
       you are working with a partner this semester
You are encouraged to study for tests together, to discuss at a very high level methods for solving the
assignments, to help each other in using the software, and to discuss methods for debugging code. You
are committing academic dishonesty if you look at someone else code (current students, past students


and code from the web) in electronic or discuss the code in at such a detailed level that solutions turn
out essentially the same. paper format You shall not ask anyone to give you a copy of their code or,
conversely, give your code to another student who asks you for it. Similarly, you shall not discuss your
algorithmic strategies at such a detailed level that you and your collaborators end up turning in
essentially the same code. Discuss very high level approaches together, but do the coding on your own.
Realize with complex problems, two programs that have produce the same results given the same input
will vary significantly in approach and structure. You are making many, hundreds, of micro decisions
as you design and implement your programs. It is extraordinarily unlikely two people working on the
same complex problem will produce the same solution.
Examples of cheating are many and include accessing another student's account, looking at someone else's
solution code, copying or downloading someone else's solution code, referring to solutions from previous
semesters, having another student walk you through the solution and how to code it, having another student
perform significant debugging of your code, having another student write your code for you and / or allowing
others to copy of access your solution code. This means you shall not look on the world wide web for code
to solve your problems and you shall not post your solution code to a publicly accessible web site. I
search the web often to find solutions posted by others to the CS312 programming assignments and
these programs are included when I rum the plagiarism detection software.
Examples of allowable collaboration include discussions and debate of general concepts and solution
strategies and help with syntax errors.
The code you can reuse in this course are:
    1. You may use any code you develop with the instructor, TAs, or proctors.
    2. You may use code (with attribution) from the class slides and the class coding examples.
    3. You may share additional test cases and expected results of test cases. You may not share solution
       code or experiment code.
You shall not make use of code you find from other sources including the world wide web. Materials
from the web should only be used for educational purposes. Thus, you can read about arrays and look
at examples of linked list code, but you must not copy any code from the web or be looking at any of
this code from the web when writing anything you turn in.
You are also allowed to post short segments of code (2 lines or less) of code that are giving you syntax errors
to the class listserv in order to get help on fixing the syntax error.
If you have any doubts about what is allowed, ask the instructor.
Plagiarism detection software will be used on assignments to find students who have copied code from
one another.
For more information on Scholastic Honesty and the UT Honor code see see the University Policy on
Scholastic Dishonesty
Religious Holidays: By UT Austin policy, you must notify "as far in advance of the absence as possible so
that arrangements can be made." Please email me at least fourteen (14) days prior to the date of observance
of a religious holy day so I have time to set up accommodations. If you must miss a class, an examination, a
work assignment, or a project in order to observe a religious holy day, you will be given an opportunity to
complete the missed work within a reasonable time after the absence.


Students with Disabilities: Students with a documented disability may request appropriate academic
accommodations from the Division of Diversity and Community Engagement, Services for Students with
Disabilities, 512-471-6259 (voice) or 1-866-329-3986 (video phone). http://ddce.utexas.edu/disability/about/
• Please request a meeting as soon as possible to discuss any accommodations
• Please notify me as soon as possible if the material being presented in class is not accessible
• Please notify me if any of the physical space is difficult for you
                                            To the CS 312 home page
